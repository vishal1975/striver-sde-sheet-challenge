   public static int search(int store[],int k,int n){
        
        
        int index=0;
        
        int start=1;
        int end=n;
        
        while(start<=end){
            int mid = (start+end)/2;
            if(store[mid]<k){
                index = mid;
                start=mid+1;
            }
            else{
                end= mid-1;
            }
        }
        
        return index+1;
    }
	public static int longestIncreasingSubsequence(int arr[]) {
		//Your code goes here
        
        int n = arr.length;
        int store[] = new int[n+1];
        
        for(int i=0;i<=n;i++){
            store[i]=Integer.MAX_VALUE;
        }
        store[1]=arr[0];
        
        for(int i=1; i<n; i++){
            
            int index = search(store,arr[i],n);
            store[index] = Math.min(store[index],arr[i]);
        }
        int ans =0;
        for(int i=1;i<=n;i++){
            if(store[i]==Integer.MAX_VALUE){
                break;
            }
            else{
                ans++;
            }
        }
       return ans; 
	}
