   public static int minSumPath(int[][] grid) {
    	// Write your code here.
        int n = grid.length;
        int m = grid[0].length;
        int dp[][] = new int[n][m];
        int direction[][] = new int[n][m];
        // 0 means from right and 1 means from up
        dp[0][0] = grid[0][0];
        for(int i=1 ; i<m ; i++){
            dp[0][i]= dp[0][i-1] + grid[0][i];
            direction[0][i] = 0;
        }
        
        for(int i=1;i<n;i++){
            dp[i][0] = dp[i-1][0]+grid[i][0];
             direction[i][0] = 1;
        }
        for(int i=1;i<n;i++){

            for(int j=1;j<m;j++){
                if(dp[i-1][j]< dp[i][j-1]){
                    direction[i][j] = 1;
                }
                else{
                    direction[i][j] = 0;
                }
                dp[i][j] = Math.min(dp[i-1][j],dp[i][j-1]) + grid[i][j];
            }
        }
        
        int h=n-1;
        int k = m-1;
        while(h!=0 || k!=0){
            
            System.out.println(h+","+k);
            if(direction[h][k]==0){
                k--;
            }
            else{
                h--;
            }
        }
        return dp[n-1][m-1];
        
    }